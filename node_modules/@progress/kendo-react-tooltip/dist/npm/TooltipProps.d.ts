/// <reference types="react" />
import { TooltipEvent } from './events';
import { TooltipPosition } from './utils';
/**
 * Represents the props of the [KendoReact Tooltip component]({% slug overview_tooltip %}).
 */
export interface TooltipProps {
    /**
     * Sets the anchor element of the Tooltip.
     *
     * The available options are:
     * - (Default) `pointer`&mdash;Shows a Tooltip where the cursor is located.
     * - `target`&mdash;Positions the Tooltip based on the anchor element.
     */
    anchorElement?: string;
    /**
     * Defines the container to which the Tooltip will be appended. Defaults to [`body`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body).
     */
    appendTo?: HTMLElement | null;
    /**
     * Sets the position of the Tooltip ([see example]({% slug positioning_tooltip %})).
     *
     * The available options are:
     * - (Default) `auto`&mdash;Positions the Tooltip depending on the available space.
     * - `right`&mdash;Positions the Tooltip to the right side of the element.
     * - `left`&mdash;Positions the Tooltip to the left side of the element.
     * - `bottom`&mdash;Positions the Tooltip at the bottom of the element.
     * - `top`&mdash;Positions the Tooltip at the top of the element.
     */
    position?: TooltipPosition;
    /**
     * Sets a class of the Tooltip animation container.
     */
    className?: string;
    /**
     * Sets the content of the Tooltip ([see example]({% slug templates_tooltip %})).
     */
    content?: any;
    /**
     * Sets the content of the Tooltip.
     */
    children?: any;
    /**
     * Specifies if the Tooltip will be open.
     * Sets the Tooltip in its controlled mode ([see example]({% slug controlledmode_tooltip %})).
     * Requires you to set the `targetElement` property.
     */
    open?: boolean;
    /**
     * Sets a delay in milliseconds.
     */
    openDelay?: number;
    /**
     * If any of the parent elements has a title, displays a Tooltip.
     */
    parentTitle?: boolean;
    /**
     * Specifies if the Tooltip callout will be displayed.
     */
    showCallout?: boolean;
    /**
     * When the position is set to `auto`, sets the start point of the Tooltip callout (in pixels).
     */
    setCalloutOnPositionAuto?: any;
    /**
     * Specifies the styles which are set to the Tooltip animation container.
     */
    style?: React.CSSProperties;
    /**
     * Sets the Tooltip target element. You have to use it with the `open` property.
     */
    targetElement?: any;
    /**
     * Specifies the CSS class names which are set to the Tooltip DOM element.
     */
    tooltipClassName?: string;
    /**
     * Specifies the styles which are set to the Tooltip DOM element.
     */
    tooltipStyle?: React.CSSProperties;
    /**
     * Fires when the Tooltip is shown.
     */
    onOpen?: (event: TooltipEvent) => void;
    /**
     * Fires when the Tooltip is hidden.
     */
    onClose?: (event: TooltipEvent) => void;
    /**
     * Represents a callback function which determines if a Tooltip will be displayed ([see example]({% slug filter_elements_tooltip %})).
     */
    filter?: (target: HTMLElement) => void;
}
