{"ast":null,"code":"import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { DrawerContext } from './context/DrawerContext';\nimport { DrawerNavigation } from './DrawerNavigation';\nimport { classNames, useDir } from '@progress/kendo-react-common';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { packageMetadata } from '../package-metadata';\n/**\n * Represents the [KendoReact Drawer component]({% slug overview_drawer %}).\n *\n * @example\n * ```jsx\n * const App = () => {\n *   const items = [\n *       { text: 'Inbox', icon: 'k-i-inbox', selected: true },\n *       { separator: true },\n *       { text: 'Notifications', icon: 'k-i-bell', disabled: true },\n *       { text: 'Calendar', icon: 'k-i-calendar' },\n *       { separator: true },\n *       { text: 'Attachments', icon: 'k-i-hyperlink-email' },\n *       { text: 'Favourites', icon: 'k-i-star-outline' }\n *   ];\n *\n *   const [expanded, setExpanded] = React.useState(true);\n *   const handleClick = () => setExpanded(prevState => !prevState);\n *\n *   return (\n *       <Drawer expanded={expanded} position='start' mode='push' items={items}>\n *           <DrawerContent>\n *               <button className=\"k-button\" onClick={handleClick}>Toggle the drawer state</button>\n *           </DrawerContent>\n *       </Drawer>\n *   );\n * };\n *    ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\n\nexport var Drawer = React.forwardRef(function (props, target) {\n  validatePackage(packageMetadata);\n  var expanded = props.expanded,\n      mode = props.mode,\n      position = props.position,\n      className = props.className,\n      children = props.children,\n      style = props.style,\n      animation = props.animation,\n      mini = props.mini,\n      width = props.width,\n      miniWidth = props.miniWidth,\n      items = props.items,\n      item = props.item,\n      tabIndex = props.tabIndex,\n      onOverlayClick = props.onOverlayClick,\n      onSelect = props.onSelect;\n  var elementRef = React.useRef(null);\n  var focusElement = React.useCallback(function () {\n    if (elementRef.current) {\n      elementRef.current.focus();\n    }\n  }, []);\n  React.useImperativeHandle(target, function () {\n    return {\n      element: elementRef.current,\n      focus: focusElement\n    };\n  });\n  var handleSelect = React.useCallback(function (itemTarget, itemIndex) {\n    if (items && onSelect) {\n      onSelect.call(undefined, {\n        itemTarget: itemTarget,\n        itemIndex: itemIndex\n      });\n    }\n  }, [items, onSelect]);\n  var dir = useDir(elementRef, props.dir);\n  var drawerClassNames = classNames({\n    'k-drawer-container': true,\n    'k-drawer-expanded': expanded,\n    'k-drawer-overlay': mode === 'overlay',\n    'k-drawer-push': mode === 'push',\n    'k-drawer-mini': mini\n  }, className);\n  return React.createElement(DrawerContext.Provider, {\n    value: {\n      animation: animation,\n      expanded: expanded,\n      mode: mode,\n      position: position,\n      mini: mini,\n      dir: dir,\n      items: items,\n      item: item,\n      width: width,\n      miniWidth: miniWidth,\n      onOverlayClick: onOverlayClick,\n      onSelect: handleSelect\n    }\n  }, React.createElement(\"div\", {\n    className: drawerClassNames,\n    ref: elementRef,\n    dir: dir,\n    style: style,\n    tabIndex: tabIndex\n  }, items && React.createElement(DrawerNavigation, null), children));\n});\nDrawer.propTypes = {\n  animation: PropTypes.any,\n  expanded: PropTypes.bool,\n  children: PropTypes.any,\n  className: PropTypes.string,\n  dir: PropTypes.string,\n  mode: PropTypes.string,\n  position: PropTypes.string,\n  mini: PropTypes.bool,\n  style: PropTypes.object,\n  tabIndex: PropTypes.number,\n  width: PropTypes.number,\n  miniWidth: PropTypes.number,\n  selected: PropTypes.number,\n  onSelect: PropTypes.func,\n  onOverlayClick: PropTypes.func\n};\nvar defaultProps = {\n  animation: true,\n  expanded: false,\n  mode: 'overlay',\n  position: 'start',\n  mini: false,\n  dir: 'ltr',\n  width: 240,\n  miniWidth: 50\n};\nDrawer.defaultProps = defaultProps;\nDrawer.displayName = 'KendoDrawer';","map":null,"metadata":{},"sourceType":"module"}