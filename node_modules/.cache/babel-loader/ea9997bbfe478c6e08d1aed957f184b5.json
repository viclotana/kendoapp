{"ast":null,"code":"import * as React from 'react';\nimport { createId, ZERO_LEVEL_ZERO_ITEM_ID } from './itemsIdsUtils';\nimport { MenuItem } from '../components/MenuItem';\n/**\n * @hidden\n */\n\nexport function prepareInputItemsForInternalWork(models, menuChildren) {\n  if (models && models.length > 0) {\n    return {\n      items: convertInputModelsToInternalOnesHelper(models),\n      inputItems: models\n    };\n  } else if (getMenuItemChildComponents(menuChildren).length > 0) {\n    var inputModels = convertInputComponentsToInputModelsHelper(getMenuItemChildComponents(menuChildren));\n    return {\n      items: convertInputModelsToInternalOnesHelper(inputModels),\n      inputItems: inputModels\n    };\n  } else {\n    return {\n      items: [],\n      inputItems: []\n    };\n  }\n}\n\nfunction copyInputItemWithoutChildren(inputModel, inputComponent) {\n  var result = {};\n\n  var _a = inputModel ? inputModel : inputComponent.props,\n      text = _a.text,\n      url = _a.url,\n      icon = _a.icon,\n      disabled = _a.disabled,\n      cssClass = _a.cssClass,\n      cssStyle = _a.cssStyle,\n      render = _a.render,\n      linkRender = _a.linkRender,\n      contentRender = _a.contentRender,\n      data = _a.data;\n\n  if (text !== undefined) {\n    result.text = text;\n  }\n\n  if (url !== undefined) {\n    result.url = url;\n  }\n\n  if (icon !== undefined) {\n    result.icon = icon;\n  }\n\n  if (disabled !== undefined) {\n    result.disabled = disabled;\n  }\n\n  if (cssClass !== undefined) {\n    result.cssClass = cssClass;\n  }\n\n  if (cssStyle !== undefined) {\n    result.cssStyle = cssStyle;\n  }\n\n  if (render !== undefined) {\n    result.render = render;\n  }\n\n  if (linkRender !== undefined) {\n    result.linkRender = linkRender;\n  }\n\n  if (contentRender !== undefined) {\n    result.contentRender = contentRender;\n  }\n\n  if (data !== undefined) {\n    result.data = data;\n  }\n\n  return result;\n}\n\nfunction getMenuItemChildComponents(menuChildren) {\n  return React.Children.toArray(menuChildren).filter(function (child) {\n    return child && child.type === MenuItem;\n  });\n}\n\nfunction convertInputComponentsToInputModelsHelper(components) {\n  var result = [];\n\n  for (var index = 0; index < components.length; index++) {\n    var comp = components[index];\n    var model = copyInputItemWithoutChildren(undefined, comp);\n    var items = convertInputComponentsToInputModelsHelper(getMenuItemChildComponents(comp.props.children));\n\n    if (items.length > 0) {\n      model.items = items;\n    }\n\n    result.push(model);\n  }\n\n  return result;\n}\n\nfunction convertInputModelsToInternalOnesHelper(inputModels, parentId) {\n  var result = [];\n\n  for (var index = 0; index < inputModels.length; index++) {\n    var inputModel = inputModels[index];\n    var internalModel = copyInputItemWithoutChildren(inputModel);\n    internalModel.id = createId(index.toString(), parentId);\n    internalModel.isLastFromSiblings = index === inputModels.length - 1;\n    internalModel.items = copyOrCreateModelChildren(inputModel, internalModel);\n    result.push(internalModel);\n  }\n\n  return result;\n}\n\nfunction copyOrCreateModelChildren(inputModel, internalModel) {\n  if (inputModel.contentRender) {\n    return [{\n      contentParentItemId: internalModel.id,\n      id: createId(ZERO_LEVEL_ZERO_ITEM_ID, internalModel.id),\n      isLastFromSiblings: true,\n      contentRender: inputModel.contentRender,\n      items: []\n    }];\n  } else if (inputModel.items) {\n    return convertInputModelsToInternalOnesHelper(inputModel.items, internalModel.id);\n  } else {\n    return [];\n  }\n}","map":null,"metadata":{},"sourceType":"module"}