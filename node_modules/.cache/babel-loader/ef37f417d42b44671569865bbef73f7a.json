{"ast":null,"code":"import { messages } from './messages';\n/**\n * A service which provides localization methods.\n */\n\nvar LocalizationService =\n/** @class */\nfunction () {\n  function LocalizationService(language) {\n    this.language = language;\n\n    if (language === '' && process.env.NODE_ENV !== 'production') {\n      throw 'Language should not be an empty string';\n    }\n  }\n  /* eslint-disable max-len */\n\n  /**\n   * Provides a string based on a key for the current language. When no string for the current language is available under this key, the `defaultValue` is returned.\n   *\n   * @param key - The key which identifies the string for the current language.\n   * @param defaultValue - The default value which will be returned when no string\n   * for the current language is available under the key.\n   * @return - The string for the current language.\n   */\n  // tslint:enable:max-line-length\n\n\n  LocalizationService.prototype.toLanguageString = function (key, defaultValue) {\n    if (this.language && messages[this.language] && messages[this.language].hasOwnProperty(key)) {\n      return messages[this.language][key];\n    } else {\n      return defaultValue;\n    }\n  };\n\n  return LocalizationService;\n}();\n\nexport { LocalizationService };","map":null,"metadata":{},"sourceType":"module"}