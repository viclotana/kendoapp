{"ast":null,"code":"import { PERCENT_PLACEHOLDER, CURRENCY_PLACEHOLDER, CURRENCY, PERCENT, EMPTY } from '../common/constants';\nimport formatCurrencySymbol from './format-currency-symbol';\nvar literalRegExp = /(\\\\.)|(['][^']*[']?)|([\"][^\"]*[\"]?)/g;\nvar PLACEHOLDER = \"__??__\";\nexport function setStyleOptions(formatOptions, info) {\n  var format = formatOptions.format; //multiply number if the format has percent\n\n  if (format.indexOf(PERCENT_PLACEHOLDER) !== -1) {\n    formatOptions.style = PERCENT;\n    formatOptions.symbol = info.numbers.symbols.percentSign;\n    formatOptions.number *= 100;\n  }\n\n  if (format.indexOf(CURRENCY_PLACEHOLDER) !== -1) {\n    formatOptions.style = CURRENCY;\n    formatOptions.symbol = formatCurrencySymbol(info);\n  }\n}\nexport function setFormatLiterals(formatOptions) {\n  var format = formatOptions.format;\n\n  if (format.indexOf(\"'\") > -1 || format.indexOf(\"\\\"\") > -1 || format.indexOf(\"\\\\\") > -1) {\n    var literals = formatOptions.literals = [];\n    formatOptions.format = format.replace(literalRegExp, function (match) {\n      var quoteChar = match.charAt(0).replace(\"\\\\\", EMPTY);\n      var literal = match.slice(1).replace(quoteChar, EMPTY);\n      literals.push(literal);\n      return PLACEHOLDER;\n    });\n  }\n}\nexport function replaceLiterals(number, literals) {\n  var result = number;\n\n  if (literals) {\n    var length = literals.length;\n\n    for (var idx = 0; idx < length; idx++) {\n      result = result.replace(PLACEHOLDER, literals[idx]);\n    }\n  }\n\n  return result;\n}","map":null,"metadata":{},"sourceType":"module"}