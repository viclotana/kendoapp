{"ast":null,"code":"import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { packageMetadata } from '../package-metadata';\nimport { classNames } from '@progress/kendo-react-common';\n/**\n * Represents the [KendoReact BottomNavigationItem component]({% slug overview_bottomnavigation %}).\n */\n\nexport var BottomNavigationItem = React.forwardRef(function (props, ref) {\n  validatePackage(packageMetadata);\n  var elementRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return {\n      element: elementRef.current\n    };\n  });\n  var className = props.className,\n      style = props.style,\n      selected = props.selected,\n      disabled = props.disabled,\n      item = props.item,\n      render = props.render,\n      dataItem = props.dataItem,\n      icon = props.icon,\n      text = props.text,\n      id = props.id,\n      onSelect = props.onSelect,\n      onKeyDown = props.onKeyDown,\n      index = props.index,\n      tabIndex = props.tabIndex;\n  var itemClasses = React.useMemo(function () {\n    return classNames('k-bottom-nav-item', {\n      'k-state-selected': selected,\n      'k-state-disabled': disabled\n    }, className);\n  }, [selected, disabled, className]);\n  var handleClick = React.useCallback(function (event) {\n    if (onSelect && index !== undefined && !disabled) {\n      onSelect(event, index);\n    }\n  }, [onSelect, index, disabled]);\n  var handleKeyDown = React.useCallback(function (event) {\n    if (onKeyDown && index !== undefined && !disabled) {\n      onKeyDown(event, index);\n    }\n  }, [onKeyDown, index, disabled]);\n  var renderer = render;\n  var ItemComp = item;\n  var bottomNavItem = React.createElement(\"span\", {\n    ref: elementRef,\n    className: itemClasses,\n    style: style,\n    role: 'link',\n    id: id,\n    tabIndex: tabIndex,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown,\n    \"aria-selected\": selected,\n    \"aria-disabled\": disabled\n  }, ItemComp ? React.createElement(ItemComp, {\n    itemIndex: index,\n    item: dataItem\n  }) : React.createElement(React.Fragment, null, icon && React.createElement(\"span\", {\n    className: \"k-bottom-nav-item-icon k-icon k-i-\" + icon\n  }), text && React.createElement(\"span\", {\n    className: 'k-bottom-nav-item-text',\n    style: {\n      userSelect: 'none'\n    }\n  }, text)));\n  return renderer !== undefined ? renderer.call(undefined, bottomNavItem, props) : bottomNavItem;\n});\nvar defaultProps = {\n  tabIndex: 0\n};\nBottomNavigationItem.propTypes = {\n  className: PropTypes.string,\n  style: PropTypes.object,\n  id: PropTypes.string,\n  disabled: PropTypes.bool,\n  selected: PropTypes.bool,\n  icon: PropTypes.string,\n  text: PropTypes.string,\n  tabIndex: PropTypes.number\n};\nBottomNavigationItem.defaultProps = defaultProps;\nBottomNavigationItem.displayName = 'KendoReactBottomNavigationItem';","map":null,"metadata":{},"sourceType":"module"}