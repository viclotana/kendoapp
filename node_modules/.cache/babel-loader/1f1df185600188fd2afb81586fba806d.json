{"ast":null,"code":"import { localeInfo } from '../cldr';\nimport { DECIMAL, DEFAULT_LOCALE, NUMBER_PLACEHOLDER, EMPTY } from '../common/constants';\nimport standardNumberFormat from './standard-number-format';\nimport customNumberFormat from './custom-number-format';\nimport formatOptions from './format-options';\nexport default function formatNumber(number, format, locale) {\n  if (format === void 0) format = NUMBER_PLACEHOLDER;\n  if (locale === void 0) locale = DEFAULT_LOCALE;\n\n  if (number === undefined || number === null) {\n    return EMPTY;\n  }\n\n  if (!isFinite(number)) {\n    return String(number);\n  }\n\n  var info = localeInfo(locale);\n  var options = formatOptions(format);\n  var result;\n\n  if (options) {\n    var style = options.style || DECIMAL;\n    result = standardNumberFormat(number, Object.assign({}, info.numbers[style], options), info);\n  } else {\n    result = customNumberFormat(number, format, info);\n  }\n\n  return result;\n}","map":null,"metadata":{},"sourceType":"module"}