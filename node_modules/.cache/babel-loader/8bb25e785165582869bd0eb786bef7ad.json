{"ast":null,"code":"import * as React from 'react';\n/**\n * @hidden\n */\n\nexport function useDir(elementRef, initialDir, args) {\n  // Dir prop is read only on initial rendering due to specifics of getComputedStyles - see below\n  var _a = React.useState(initialDir),\n      dir = _a[0],\n      setDir = _a[1];\n\n  React.useEffect(function () {\n    if (!dir && window && elementRef.current) {\n      // Note: getComputedStyle forces reflow\n      var rtlCandidate = window.getComputedStyle(elementRef.current).direction;\n\n      if (rtlCandidate) {\n        // rerender is needed as DOM is read after first render\n        setDir(rtlCandidate);\n      }\n    }\n  }, args);\n  return dir;\n}\n/**\n * An utility function for asynchronous focus/blur handling.\n *\n * By default, the `onFocus` and `onBlur` callbacks are called every time a child components receives/loses focus.\n * Use this utility hook for scenarios where you need to know if the parent has received focus for the first time, or completely lost focus.\n *\n * @returns\n */\n\nexport function useAsyncFocusBlur(_a) {\n  var onFocus = _a.onFocus,\n      onBlur = _a.onBlur;\n  var tick = React.useRef(0);\n  var nextTick = React.useCallback(function (f) {\n    clearTimeout(tick.current);\n    tick.current = window.setTimeout(function () {\n      return f();\n    });\n  }, [tick]);\n  var handleFocus = React.useCallback(function () {\n    var event = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      event[_i] = arguments[_i];\n    }\n\n    clearTimeout(tick.current);\n\n    if (onFocus) {\n      onFocus.call.apply(onFocus, [undefined].concat(event));\n    }\n  }, [onFocus, tick]);\n  var handleBlur = React.useCallback(function () {\n    var event = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      event[_i] = arguments[_i];\n    }\n\n    nextTick(function () {\n      if (onBlur) {\n        onBlur.call.apply(onBlur, [undefined].concat(event));\n      }\n    });\n  }, [nextTick]);\n  return {\n    onFocus: handleFocus,\n    onBlur: handleBlur\n  };\n}","map":null,"metadata":{},"sourceType":"module"}